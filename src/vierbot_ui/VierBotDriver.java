/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vierbot_ui;

import com.sun.glass.events.KeyEvent;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;

/**
 *
 * @author Gonzalo Diaz
 */
public class VierBotDriver extends javax.swing.JPanel {

    int xLateral = 150, y = 200, xFrontal = xLateral + 250, pX = 200, pY = 200;
    //valores geometricos
    int L2 = 70, L1 = 70;
    ArduinoRXTX puerto;

    public double[] toCartesian(double r, double angle) {
        double point[] = new double[2];
        point[0] = r * Math.cos(angle * Math.PI / 180);
        point[1] = r * Math.sin(angle * Math.PI / 180);
        return point;
    }

//cinematica para un brazo con dos grados de libertad
    public double[] kinematic(double px, double py) {
        double cosq2 = (Math.pow(px, 2) + Math.pow(py, 2) - Math.pow(L1, 2) - Math.pow(L2, 2)) / (2 * L2 * L1);
        double sinq2 = Math.sqrt(1 - Math.pow(cosq2, 2));
        double q2 = Math.atan2(sinq2, cosq2);
        double q1 = Math.atan2(py, px) - Math.atan2(L2 * sinq2, L1 + L2 * cosq2);
        double angulos[] = {q1 * (180 / Math.PI), q2 * (180 / Math.PI)};
        return angulos;
    }

    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D g2d = (Graphics2D) g;
        g2d.setStroke(new BasicStroke(20));
        g2d.drawLine(xLateral, y, xLateral + 100, y);
        g2d.drawLine(xFrontal, y, xFrontal + 50, y);
        g2d.setStroke(new BasicStroke(2));
        g2d.setColor(Color.red);

        double angulos[] = kinematic(pX - xLateral + 5, pY - y);

        System.out.println("q1=" + angulos[0] + "   q2=" + angulos[1]);
        //brazo
        double point1[] = toCartesian(L1, angulos[0]);
        g2d.drawLine(xLateral, y + 5, xLateral + (int) point1[0], y + (int) point1[1] + 5);

        g2d.setColor(Color.blue);
        //antebrazo
        g2d.drawLine(xLateral + (int) point1[0], y + (int) point1[1] + 5, pX, pY);

        g2d.drawOval(pX, pY, 5, 5);

    }

    public VierBotDriver() {
        initComponents();
        // puerto = new ArduinoRXTX();
        setFocusable(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                formMouseMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 328, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 230, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseMoved
        // TODO add your handling code here:
        pX = evt.getX();
        pY = evt.getY();
        repaint();

        //System.out.println("moved");
    }//GEN-LAST:event_formMouseMoved
    int aux = 1;
    private void formKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyReleased
        // TODO add your handling code here:
        //int aux = 10;

    }//GEN-LAST:event_formKeyReleased

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
        requestFocusInWindow();
    }//GEN-LAST:event_formMouseClicked

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_UP:
                pY -= aux;
                break;
            case KeyEvent.VK_DOWN:
                pY += aux;
                break;
            case KeyEvent.VK_RIGHT:
                pX += aux;
                break;
            case KeyEvent.VK_LEFT:
                pX -= aux;
                break;

        }

        repaint();
    }//GEN-LAST:event_formKeyPressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
